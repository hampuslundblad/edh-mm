/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PlayersImport } from './routes/players'
import { Route as BracketInfoImport } from './routes/bracket-info'
import { Route as IndexImport } from './routes/index'
import { Route as GameIndexImport } from './routes/game/index'
import { Route as GameRunningImport } from './routes/game/running'
import { Route as GamePastImport } from './routes/game/past'
import { Route as GameGameIdImport } from './routes/game/$gameId'
import { Route as PlayerIdIndexImport } from './routes/player.$id.index'
import { Route as PlayerIdDeckImport } from './routes/player.$id.deck'
import { Route as PlayerIdEditDeckIdImport } from './routes/player.$id.edit.$deckId'

// Create/Update Routes

const PlayersRoute = PlayersImport.update({
  id: '/players',
  path: '/players',
  getParentRoute: () => rootRoute,
} as any)

const BracketInfoRoute = BracketInfoImport.update({
  id: '/bracket-info',
  path: '/bracket-info',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GameIndexRoute = GameIndexImport.update({
  id: '/game/',
  path: '/game/',
  getParentRoute: () => rootRoute,
} as any)

const GameRunningRoute = GameRunningImport.update({
  id: '/game/running',
  path: '/game/running',
  getParentRoute: () => rootRoute,
} as any)

const GamePastRoute = GamePastImport.update({
  id: '/game/past',
  path: '/game/past',
  getParentRoute: () => rootRoute,
} as any)

const GameGameIdRoute = GameGameIdImport.update({
  id: '/game/$gameId',
  path: '/game/$gameId',
  getParentRoute: () => rootRoute,
} as any)

const PlayerIdIndexRoute = PlayerIdIndexImport.update({
  id: '/player/$id/',
  path: '/player/$id/',
  getParentRoute: () => rootRoute,
} as any)

const PlayerIdDeckRoute = PlayerIdDeckImport.update({
  id: '/player/$id/deck',
  path: '/player/$id/deck',
  getParentRoute: () => rootRoute,
} as any)

const PlayerIdEditDeckIdRoute = PlayerIdEditDeckIdImport.update({
  id: '/player/$id/edit/$deckId',
  path: '/player/$id/edit/$deckId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/bracket-info': {
      id: '/bracket-info'
      path: '/bracket-info'
      fullPath: '/bracket-info'
      preLoaderRoute: typeof BracketInfoImport
      parentRoute: typeof rootRoute
    }
    '/players': {
      id: '/players'
      path: '/players'
      fullPath: '/players'
      preLoaderRoute: typeof PlayersImport
      parentRoute: typeof rootRoute
    }
    '/game/$gameId': {
      id: '/game/$gameId'
      path: '/game/$gameId'
      fullPath: '/game/$gameId'
      preLoaderRoute: typeof GameGameIdImport
      parentRoute: typeof rootRoute
    }
    '/game/past': {
      id: '/game/past'
      path: '/game/past'
      fullPath: '/game/past'
      preLoaderRoute: typeof GamePastImport
      parentRoute: typeof rootRoute
    }
    '/game/running': {
      id: '/game/running'
      path: '/game/running'
      fullPath: '/game/running'
      preLoaderRoute: typeof GameRunningImport
      parentRoute: typeof rootRoute
    }
    '/game/': {
      id: '/game/'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof GameIndexImport
      parentRoute: typeof rootRoute
    }
    '/player/$id/deck': {
      id: '/player/$id/deck'
      path: '/player/$id/deck'
      fullPath: '/player/$id/deck'
      preLoaderRoute: typeof PlayerIdDeckImport
      parentRoute: typeof rootRoute
    }
    '/player/$id/': {
      id: '/player/$id/'
      path: '/player/$id'
      fullPath: '/player/$id'
      preLoaderRoute: typeof PlayerIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/player/$id/edit/$deckId': {
      id: '/player/$id/edit/$deckId'
      path: '/player/$id/edit/$deckId'
      fullPath: '/player/$id/edit/$deckId'
      preLoaderRoute: typeof PlayerIdEditDeckIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/bracket-info': typeof BracketInfoRoute
  '/players': typeof PlayersRoute
  '/game/$gameId': typeof GameGameIdRoute
  '/game/past': typeof GamePastRoute
  '/game/running': typeof GameRunningRoute
  '/game': typeof GameIndexRoute
  '/player/$id/deck': typeof PlayerIdDeckRoute
  '/player/$id': typeof PlayerIdIndexRoute
  '/player/$id/edit/$deckId': typeof PlayerIdEditDeckIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/bracket-info': typeof BracketInfoRoute
  '/players': typeof PlayersRoute
  '/game/$gameId': typeof GameGameIdRoute
  '/game/past': typeof GamePastRoute
  '/game/running': typeof GameRunningRoute
  '/game': typeof GameIndexRoute
  '/player/$id/deck': typeof PlayerIdDeckRoute
  '/player/$id': typeof PlayerIdIndexRoute
  '/player/$id/edit/$deckId': typeof PlayerIdEditDeckIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/bracket-info': typeof BracketInfoRoute
  '/players': typeof PlayersRoute
  '/game/$gameId': typeof GameGameIdRoute
  '/game/past': typeof GamePastRoute
  '/game/running': typeof GameRunningRoute
  '/game/': typeof GameIndexRoute
  '/player/$id/deck': typeof PlayerIdDeckRoute
  '/player/$id/': typeof PlayerIdIndexRoute
  '/player/$id/edit/$deckId': typeof PlayerIdEditDeckIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/bracket-info'
    | '/players'
    | '/game/$gameId'
    | '/game/past'
    | '/game/running'
    | '/game'
    | '/player/$id/deck'
    | '/player/$id'
    | '/player/$id/edit/$deckId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/bracket-info'
    | '/players'
    | '/game/$gameId'
    | '/game/past'
    | '/game/running'
    | '/game'
    | '/player/$id/deck'
    | '/player/$id'
    | '/player/$id/edit/$deckId'
  id:
    | '__root__'
    | '/'
    | '/bracket-info'
    | '/players'
    | '/game/$gameId'
    | '/game/past'
    | '/game/running'
    | '/game/'
    | '/player/$id/deck'
    | '/player/$id/'
    | '/player/$id/edit/$deckId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BracketInfoRoute: typeof BracketInfoRoute
  PlayersRoute: typeof PlayersRoute
  GameGameIdRoute: typeof GameGameIdRoute
  GamePastRoute: typeof GamePastRoute
  GameRunningRoute: typeof GameRunningRoute
  GameIndexRoute: typeof GameIndexRoute
  PlayerIdDeckRoute: typeof PlayerIdDeckRoute
  PlayerIdIndexRoute: typeof PlayerIdIndexRoute
  PlayerIdEditDeckIdRoute: typeof PlayerIdEditDeckIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BracketInfoRoute: BracketInfoRoute,
  PlayersRoute: PlayersRoute,
  GameGameIdRoute: GameGameIdRoute,
  GamePastRoute: GamePastRoute,
  GameRunningRoute: GameRunningRoute,
  GameIndexRoute: GameIndexRoute,
  PlayerIdDeckRoute: PlayerIdDeckRoute,
  PlayerIdIndexRoute: PlayerIdIndexRoute,
  PlayerIdEditDeckIdRoute: PlayerIdEditDeckIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/bracket-info",
        "/players",
        "/game/$gameId",
        "/game/past",
        "/game/running",
        "/game/",
        "/player/$id/deck",
        "/player/$id/",
        "/player/$id/edit/$deckId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/bracket-info": {
      "filePath": "bracket-info.tsx"
    },
    "/players": {
      "filePath": "players.tsx"
    },
    "/game/$gameId": {
      "filePath": "game/$gameId.tsx"
    },
    "/game/past": {
      "filePath": "game/past.tsx"
    },
    "/game/running": {
      "filePath": "game/running.tsx"
    },
    "/game/": {
      "filePath": "game/index.tsx"
    },
    "/player/$id/deck": {
      "filePath": "player.$id.deck.tsx"
    },
    "/player/$id/": {
      "filePath": "player.$id.index.tsx"
    },
    "/player/$id/edit/$deckId": {
      "filePath": "player.$id.edit.$deckId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
